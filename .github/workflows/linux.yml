name: Linux_CI
on:
  push:
    branches:
      - main
      - rel-*
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Onnxruntime-ARM:
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v4
         with:
           submodules: true
       - uses: actions/setup-python@v4
         with:
           python-version: '3.8.x'
           architecture: 'x64'
       - name: 'Setup ARM ComputeLibrary requirements'
         run: |
           wget https://github.com/ARM-software/ComputeLibrary/releases/download/v20.02/arm_compute-v20.02-bin-linux.tar.gz
           tar xf arm_compute-v20.02-bin-linux.tar.gz
       - name: 'Setup cmake'
         run: |
           python3 -m pip install cmake
       - name: 'Build and Test'
         run: |
           export CPATH=./arm_compute-v20.02-bin-linux/include/:./arm_compute-v20.02-bin-linux/
           export LD_LIBRARY_PATH=./arm_compute-v20.02-bin-linux/lib/linux-arm64-v8a-neon-cl/
           python3 ${{ github.workspace }}/tools/ci_build/build.py --build_dir build --config Release --skip_submodule_sync --build_wheel --arm64 --use_acl ACL_2002 --skip_tests
